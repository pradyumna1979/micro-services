server:
  port: 8060

eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8061/eureka/

logging:
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%X{traceId:-},%X{spanId:-}] ${LOG_LEVEL_PATTERN:-%5p} %m%n"

spring:
  output:
    ansi:
      enabled: always
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true
      routes:
        - id: employee-service
          uri: lb://employee-service
          predicates:
            - Path=/employee/**
          filters:
            - name: CircuitBreaker
              args:
                name: employee
                fallbackUri: forward:/fallback/employee
                statusCodes:
                 - 500
            - RewritePath=/employee/(?<path>.*), /$\{path}
        - id: department-service
          uri: lb://department-service
          predicates:
            - Path=/department/**
          filters:
            - RewritePath=/department/(?<path>.*), /$\{path}
            - name: CircuitBreaker
              args:
                name: department
                fallbackUri: forward:/fallback/department
                statusCodes:
                 - 500
        - id: organization-service
          uri: lb://organization-service
          predicates:
            - Path=/organization/**
          filters:
            - RewritePath=/organization/(?<path>.*), /$\{path}
            - name: CircuitBreaker
              args:
                name: organization
                fallbackUri: forward:/fallback/organization
                statusCodes:
                 - 500
        - id: openapi
          uri: http://localhost:${server.port}
          predicates:
            - Path=/v3/api-docs/**
          filters:
            - RewritePath=/v3/api-docs/(?<path>.*), /$\{path}/v3/api-docs
resilience4j.circuitbreaker:
  configs:
    default:
      slidingWindowSize: 10
      minimumNumberOfCalls: 5
      permittedNumberOfCallsInHalfOpenState: 3
      automaticTransitionFromOpenToHalfOpenEnabled: true
      waitDurationInOpenState: 2s
      failureRateThreshold: 5
      eventConsumerBufferSize: 10
      slowCallDurationThreshold: 200ms
      slowCallRateThreshold: 30
      recordExceptions:
        - org.springframework.web.client.HttpServerErrorException
        - java.io.IOException
      ignoreExceptions:
        - java.lang.IllegalStateException
    shared:
      slidingWindowSize: 100
      permittedNumberOfCallsInHalfOpenState: 30
      waitDurationInOpenState: 1s
      failureRateThreshold: 50
      eventConsumerBufferSize: 10
      ignoreExceptions:
        - java.lang.IllegalStateException
  instances:
    department:
      baseConfig: default
    employee:
      baseConfig: default
    organization:
      slidingWindowSize: 10
      minimumNumberOfCalls: 10
      permittedNumberOfCallsInHalfOpenState: 3
      waitDurationInOpenState: 1s
      failureRateThreshold: 50
      eventConsumerBufferSize: 10
      recordFailurePredicate: com.pradyumna.cloud.predicate.HttpInternalServicePredicate

resilience4j.timelimiter:
  time-limiter-aspect-order: 398
  configs:
    default:
      timeoutDuration: 1s
      cancelRunningFuture: false
  instances:
    employee:
      timeoutDuration: 250ms

springdoc:
  swagger-ui:
    urls:
      - name: employee
        url: /v3/api-docs/employee
      - name: department
        url: /v3/api-docs/department
      - name: organization
        url: /v3/api-docs/organization

management:
  endpoint:
    gateway:
      enabled: true
  endpoints:
    web:
      exposure:
        include: '*'
  tracing:
    sampling:
      probability: 1.0
  zipkin:
    tracing:
      endpoint: http://localhost:9411/api/v2/spans

level.io.github.resilience4j: DEBUG